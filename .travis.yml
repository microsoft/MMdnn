sudo: required
dist: bionic

os:
  - linux

language: python
python:
  - "3.6"
virtualenv:
  system_site_packages: true

env:
  - TEST_PARSER=tensorflow
  - TEST_PARSER=tensorflow_2
  - TEST_PARSER=tensorflow_3
  - TEST_PARSER=tensorflow_4
  - TEST_PARSER=tensorflow_5
  - TEST_PARSER=tensorflow_6
  #- TEST_PARSER=tensorflow_7
  - TEST_PARSER=tensorflow_frozen
  - TEST_PARSER=pytorch
  - TEST_PARSER=pytorch_2
  - TEST_PARSER=pytorch_3
  - TEST_PARSER=pytorch_4
  - TEST_PARSER=pytorch_5
  - TEST_PARSER=keras
  - TEST_PARSER=keras_2
  - TEST_PARSER=keras_3
  - TEST_PARSER=keras_4
  - TEST_PARSER=keras_5
  - TEST_PARSER=cntk
  - TEST_PARSER=cntk_2
  - TEST_PARSER=caffe
  - TEST_PARSER=caffe_2
  - TEST_PARSER=caffe_3
  #- TEST_PARSER=caffe_4
  - TEST_PARSER=mxnet
  - TEST_PARSER=mxnet_2
  - TEST_PARSER=mxnet_3
  #- TEST_PARSER=mxnet_4
  - TEST_PARSER=mxnet_5
  - TEST_PARSER=paddle
  - TEST_PARSER=coreml
  - TEST_PARSER=coreml_2
  - TEST_PARSER=darknet

cache:
  directories:
    - $HOME/.cache/pip

addons:
  apt:
    update: false

before_install:
  - python -m pip install --upgrade pip
  - sudo apt-get install -y --no-install-recommends caffe-cpu
  - sudo apt-get install -y --no-install-recommends openmpi-bin
  - sudo ln -s /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.20 /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.1
  - sudo ln -s /usr/lib/x86_64-linux-gnu/libmpi.so.20 /usr/lib/x86_64-linux-gnu/libmpi.so.12

install:
  - python -m pip install -q -r $(python requirements/select_requirements.py)

before_script:
  - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/lib/x86_64-linux-gnu

after_failure: true

after_success: true

after_script: true

script: bash test.sh $TEST_PARSER

matrix:
  fast_finish: true

  allow_failures:
    - env: TEST_PARSER=paddle
  
  exclude:
    - python: "3.6"
      env: TEST_PARSER=paddle
    - os: linux
      env: TEST_PARSER=coreml
    - os: linux
      env: TEST_PARSER=coreml_2

notifications:
  email:
    on_success: never
    on_failure: never
