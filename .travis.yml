sudo: required
dist: xenial

os:
  - linux
  - osx

language: python
python:
  - "2.7"
  - "3.5"

env:
  - TEST_PARSER=tensorflow TEST_ONNX=true
  - TEST_PARSER=tensorflow TEST_ONNX=false
  - TEST_PARSER=keras TEST_ONNX=true
  - TEST_PARSER=keras TEST_ONNX=false
  - TEST_PARSER=cntk TEST_ONNX=true
  - TEST_PARSER=cntk TEST_ONNX=false
  - TEST_PARSER=caffe TEST_ONNX=true
  - TEST_PARSER=caffe TEST_ONNX=false
  - TEST_PARSER=mxnet TEST_ONNX=true
  - TEST_PARSER=mxnet TEST_ONNX=false
  - TEST_PARSER=pytorch TEST_ONNX=true
  - TEST_PARSER=pytorch TEST_ONNX=false
  - TEST_PARSER=paddle TEST_ONNX=true
  - TEST_PARSER=paddle TEST_ONNX=false
  - TEST_PARSER=coreml TEST_ONNX=true
  - TEST_PARSER=coreml TEST_ONNX=false
  - TEST_PARSER=darknet TEST_ONNX=true
  - TEST_PARSER=darknet TEST_ONNX=false
  - TEST_PARSER=tensorflow_frozen TEST_ONNX=true
  - TEST_PARSER=tensorflow_frozen TEST_ONNX=false

cache:
  directories:
    - $HOME/.cache/pip
    - $TRAVIS_BUILD_DIR/tests/cache

addons:
  apt:
    update: true

before_install:
  - sudo apt-get install -y openmpi-bin

install:
  - pip install -q -r $(python requirements/select_requirements.py)

before_script: true

after_failure: true

after_success: true

after_script: true

script: bash test.sh $TEST_PARSER

matrix:
  fast_finish: true

  allow_failures:
    - os: osx
    - env: TEST_PARSER=paddle TEST_ONNX=true
    - env: TEST_PARSER=paddle TEST_ONNX=false

    exclude:
    - python: "3.5"
      env: TEST_PARSER=paddle TEST_ONNX=true
    - python: "3.5"
      env: TEST_PARSER=paddle TEST_ONNX=false
    - os: linux
      env: TEST_PARSER=coreml TEST_ONNX=true
    - os: linux
      env: TEST_PARSER=coreml TEST_ONNX=false

notifications:
  email:
    on_success: never
    on_failure: never
